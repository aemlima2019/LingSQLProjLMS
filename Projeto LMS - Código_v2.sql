GO
/*=============================================================================================
     VALIDAÇÃO DE EXISTÊNCIA DE TABELAS - VERIFICA SE TABELAS JÁ EXISTEM NO BANCO DE DADOS
===============================================================================================*/

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'USUARIOIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE USUARIOIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'COORDENADORIMP')
	AND [TYPE] IN (N'U',N'PC')
)

DROP TABLE COORDENADORIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'ALUNOIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE ALUNOIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'PROFESSORIMP')
	AND [TYPE] IN (N'U',N'PC')
)
					
DROP TABLE PROFESSORIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'DISCIPLINAIMP')
	AND TYPE IN (N'U',N'PC')
)
			
DROP TABLE DISCIPLINAIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'CURSOIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE CURSOIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'DISCIPLINA_OFERTADAIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE DISCIPLINA_OFERTADAIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'SOLICITACAO_MATRICULAIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE SOLICITACAO_MATRICULAIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'ATIVIDADEIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE ATIVIDADEIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'ATIVIDADE_VINCULADAIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE ATIVIDADE_VINCULADAIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'ENTREGAIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE ENTREGAIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO

IF EXISTS (
	SELECT * FROM SYS.OBJECTS
	WHERE object_id = OBJECT_ID (N'MENSAGEMIMP')
	AND [TYPE] IN (N'U',N'PC')
)
			
DROP TABLE MENSAGEMIMP --PARA DROPAR, SE EXISTIR FK É NECESSÁRIO DROPAR FK, ANTES DE DROPAR A TABELA
GO
/*==============================================================================================
				CRIAÇÃO E ALTERAÇÃO DE TABELAS E CRIAÇÃO DE ÍNDICES
================================================================================================*/
CREATE TABLE USUARIOIMP (
	ID_USUARIO INT NOT NULL IDENTITY (1,1)
	,[LOGIN] INT NOT NULL  
	,SENHA INT NOT NULL 
	,DATA_EXPIRACAO DATETIME2 NOT NULL
	,CONSTRAINT PK_ID_US PRIMARY KEY (ID_USUARIO)
	,CONSTRAINT UQ_LOG_US UNIQUE ([LOGIN])
)
GO

ALTER TABLE USUARIOIMP ADD CONSTRAINT DF_DT_EXP_US DEFAULT ('01/01/1900') FOR DATA_EXPIRACAO
GO

CREATE INDEX [I_TbUsuIdUser] ON USUARIOIMP  
	(  
	ID_USUARIO ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE COORDENADORIMP (
	IDCOORDENADOR INT NOT NULL IDENTITY (1,1)
	,ID_USUARIO INT NOT NULL
	,NOME VARCHAR(100) NOT NULL
	,ENDERECO VARCHAR(100) NOT NULL
	,E_MAIL VARCHAR (100) NOT NULL
	,TELEFONE_RESIDENCIAL CHAR(15) NOT NULL
	,TELEFONE_CELULAR CHAR(15) NOT NULL
	,CONSTRAINT PK_ID_CO PRIMARY KEY (IDCOORDENADOR)
	,CONSTRAINT FK_ID_CO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOIMP (ID_USUARIO)
	,CONSTRAINT UQ_EMAIL_CO UNIQUE (E_MAIL)
	,CONSTRAINT UQ_RES_CO UNIQUE ([TELEFONE_RESIDENCIAL])
	,CONSTRAINT UQ_CEL_CO UNIQUE ([TELEFONE_CELULAR])
)
GO

CREATE INDEX [III_TbCoordIdCoord] ON COORDENADORIMP  
	(  
	IDCOORDENADOR ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE ALUNOIMP (
	ID_ALUNO INT NOT NULL IDENTITY (1,1)
	,ID_USUARIO INT NOT NULL  
	,NOME VARCHAR(100) NOT NULL
	,EMAIL VARCHAR (100) NOT NULL
	,ENDERECO VARCHAR (100) NOT NULL
	,TELEFONE_CELULAR CHAR(15) NOT NULL
	,TELEFONE_RESIDENCIAL CHAR(15) NOT NULL
	,RA INT NOT NULL
	,FOTO VARCHAR(MAX) NULL
	,CONSTRAINT PK_ID_AL PRIMARY KEY (ID_ALUNO)
	,CONSTRAINT FK_ID_AL FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOIMP (ID_USUARIO)
	,CONSTRAINT UQ_EMAIL_AL UNIQUE (EMAIL)
	,CONSTRAINT UQ_CEL_AL UNIQUE (TELEFONE_CELULAR)
	,CONSTRAINT UQ_RES_AL UNIQUE (TELEFONE_RESIDENCIAL)
)
GO

CREATE INDEX [V_TbAlunIdAlun] ON ALUNOIMP
	(  
	ID_ALUNO ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE PROFESSORIMP (
	ID_PROFESSOR INT NOT NULL IDENTITY (1,1)
	,ID_USUARIO INT NOT NULL  
	,NOME VARCHAR(100) NOT NULL
	,EMAIL VARCHAR (100) NOT NULL
	,ENDERECO VARCHAR (100) NOT NULL
	,TELEFONE_CELULAR CHAR(15) NOT NULL
	,TELEFONE_RESIDENCIAL CHAR(15) NOT NULL
	,APELIDO CHAR(20) NOT NULL
	,CONSTRAINT PK_ID_PF PRIMARY KEY (ID_PROFESSOR)
	,CONSTRAINT UQ_EMAIL_PF UNIQUE (EMAIL)
	,CONSTRAINT UQ_CEL_PF UNIQUE (TELEFONE_CELULAR)
	,CONSTRAINT UQ_RES_PF UNIQUE (TELEFONE_RESIDENCIAL)
	,CONSTRAINT FK_US_PF FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOIMP (ID_USUARIO)
)
GO

CREATE INDEX [VIII_TbProfIdCoord] ON PROFESSORIMP
	(  
	ID_PROFESSOR ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE DISCIPLINAIMP (
	ID_DISCIPLINA INT NOT NULL IDENTITY (1,1)
	,NOME VARCHAR(100)
	,[DATA_DISC] DATETIME2 NOT NULL
	,[STATUS] CHAR(10) NOT NULL
	,PLANODESTINO VARCHAR(MAX) NOT NULL
	,CARGAHORARIA TINYINT  NOT NULL
	,COMPETENCIAS CHAR(20) NOT NULL
	,HABILIDADES VARCHAR(100) NOT NULL
	,EMENTA VARCHAR(MAX) NOT NULL
	,CONTEUDOPROGRAMATICO VARCHAR(MAX) NOT NULL
	,BIBLIOGRAFIA VARCHAR(MAX) NOT NULL
	,PERCENTUALPRATICO CHAR(5) NOT NULL
	,PERCENTUALTEORICO CHAR(5) NOT NULL
	,ID_COORDENADOR INT NOT NULL
	,CONSTRAINT PK_ID_DISC PRIMARY KEY (ID_DISCIPLINA)
	,CONSTRAINT UQ_NOME_DISC UNIQUE (NOME)
	,CONSTRAINT CK_STAT_DISC CHECK ([STATUS] IN ('ABERTA','FECHADA'))
	,CONSTRAINT CK_CH_HOR CHECK (CARGAHORARIA IN ('40','80'))
	,CONSTRAINT CK_PERC_PRAT CHECK (PERCENTUALPRATICO IN ('00','100'))
	,CONSTRAINT CK_PERC_TEOR CHECK (PERCENTUALTEORICO IN ('00','100'))
	,CONSTRAINT FK_CO_DISC FOREIGN KEY (ID_COORDENADOR) 
		REFERENCES COORDENADORIMP (IDCOORDENADOR)
)
GO

ALTER TABLE DISCIPLINAIMP ADD CONSTRAINT DF_DT_DISC DEFAULT (GETDATE()) FOR [DATA_DISC]

ALTER TABLE DISCIPLINAIMP ADD CONSTRAINT DF_STAT_DISC DEFAULT ('ABERTA') FOR [STATUS]
GO

CREATE INDEX [XI_TbDiscipIdDisc] ON DISCIPLINAIMP
	(  
	ID_DISCIPLINA ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE CURSOIMP (
	ID_CURSO INT NOT NULL IDENTITY(1,1)
	,NOME_CURSO VARCHAR(100)
	,CONSTRAINT PK_CUR PRIMARY KEY (ID_CURSO)
	,CONSTRAINT UQ_NOM_CUR UNIQUE (NOME_CURSO)
)
GO

CREATE INDEX [XIV_TbCursIdCurs] ON CURSOIMP  
	(  
	ID_CURSO ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE DISCIPLINA_OFERTADAIMP (
	IDDISCOF INT NOT NULL IDENTITY (1,1)
	,ID_COORDENADOR INT NOT NULL
	,DTINICIOMATRICULA DATETIME2 NULL
	,DTFIMMATRICULA DATETIME2 NULL
	,ID_DISCIPLINA INT NOT NULL
	,ID_CURSO INT NOT NULL
	,ANO char(4) NOT NULL
	,SEMESTRE CHAR(2) NOT NULL
	,TURMA CHAR(1) NOT NULL
	,ID_PROFESSOR INT NULL
	,METODOLOGIA VARCHAR(MAX) NULL
	,RECURSOS VARCHAR(MAX) NULL
	,CRITERIO_AVALIACAO VARCHAR(MAX) NULL
	,PLANO_AULAS VARCHAR(MAX) NULL
	,CONSTRAINT PK_DISCOF PRIMARY KEY (IDDISCOF)
	,CONSTRAINT FK_ID_CO_DIOF FOREIGN KEY (ID_COORDENADOR) REFERENCES COORDENADORIMP (IDCOORDENADOR)
	,CONSTRAINT FK_DISC_DIOF FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINAIMP (ID_DISCIPLINA)
	,CONSTRAINT FK_ID_CS_DIOF FOREIGN KEY (ID_CURSO) REFERENCES CURSOIMP (ID_CURSO)
	,CONSTRAINT FK_ID_PROF_DIOF FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSORIMP (ID_PROFESSOR)
	,CONSTRAINT UQ_DISC UNIQUE (ID_CURSO, ANO, SEMESTRE, TURMA) 
	,CONSTRAINT CK_ANO CHECK (ANO >= 1900 AND ANO <= 2100) 
	,CONSTRAINT CK_SEM_DIOF CHECK (SEMESTRE IN ('1','2'))
	,CONSTRAINT CK_TURM_DIOF CHECK (TURMA IN ('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'))
)
GO

CREATE INDEX [XVI_TbDiscOfIdDiscOf] ON DISCIPLINA_OFERTADAIMP 
	(  
	IDDISCOF ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE SOLICITACAO_MATRICULAIMP (
	ID_SOLMATR INT NOT NULL IDENTITY (1,1)
	,ID_ALUNO INT NOT NULL  
	,ID_DISCIPLINAOFERT INT NOT NULL
	,DATA_SOLICITACAO DATETIME2 NULL
	,ID_COORDENADOR INT NULL
	,STATUS CHAR(10)
	,CONSTRAINT PK_ID_SM PRIMARY KEY (ID_SOLMATR)
	,CONSTRAINT FK_ALUN_SM FOREIGN KEY (ID_ALUNO) REFERENCES ALUNOIMP (ID_ALUNO)
	,CONSTRAINT FK_ID_CO_SM FOREIGN KEY (ID_COORDENADOR) REFERENCES COORDENADORIMP (IDCOORDENADOR)
	,CONSTRAINT FK_DISC_SM FOREIGN KEY (ID_DISCIPLINAOFERT) REFERENCES DISCIPLINA_OFERTADAIMP (IDDISCOF)
	,CONSTRAINT CK_STAT_SM CHECK (STATUS IN ('SOLICITADA','APROVADA','REJEITADA','CANCELADA'))
)
GO

ALTER TABLE SOLICITACAO_MATRICULAIMP ADD CONSTRAINT DF_DT_SM DEFAULT (GETDATE()) FOR DATA_SOLICITACAO
GO

ALTER TABLE SOLICITACAO_MATRICULAIMP ADD CONSTRAINT DF_STAT_SM DEFAULT ('SOLICITADA') FOR STATUS
GO

CREATE INDEX [XXI_TbSolMatIdCoord] ON SOLICITACAO_MATRICULAIMP 
	(  
	ID_SOLMATR ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE ATIVIDADEIMP(
	ID_ATIVIDADE INT NOT NULL IDENTITY (1,1)
	,TITULO VARCHAR (100) NOT NULL
	,CONTEUDO VARCHAR(MAX) NOT NULL
	,DESCRICAO VARCHAR(MAX) NOT NULL
	,TIPO CHAR(15) NOT NULL
	,ID_PROFESSOR INT NOT NULL
	,CONSTRAINT PK_ATIV PRIMARY KEY (ID_ATIVIDADE)
	,CONSTRAINT FK_PROF_ATIV FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSORIMP (ID_PROFESSOR)
	,CONSTRAINT UQ_ATIV UNIQUE (TITULO)
	,CONSTRAINT CK_STAT_ATIVINC CHECK (TIPO IN ('RESPOSTA ABERTA','TESTE'))
)
GO

CREATE INDEX [XXIV_TbAtivIdAtiv] ON ATIVIDADEIMP 
	(  
	ID_ATIVIDADE ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE ATIVIDADE_VINCULADAIMP (
	ID_ATIVID_VINC INT NOT NULL IDENTITY (1,1)
	,ID_ATIVIDADE INT NOT NULL
	,ID_PROFESSOR INT NOT NULL
	,ID_DISCOF INT NOT NULL
	,ROTULO CHAR(3) NOT NULL
	,[STATUS] CHAR(20) NOT NULL
	,INICIO_ATIVIDADE DATETIME2 NOT NULL
	,FIM_ATIVIDADE DATETIME2 NOT NULL
	,CONSTRAINT PK_ATIV_VINC PRIMARY KEY (ID_ATIVID_VINC)
	,CONSTRAINT FK_ATIV_ATIVINC FOREIGN KEY (ID_ATIVIDADE) REFERENCES ATIVIDADEIMP (ID_ATIVIDADE)
	,CONSTRAINT FK_ATIV_PROF FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSORIMP (ID_PROFESSOR)
	,CONSTRAINT FK_ATIV_DIOF FOREIGN KEY (ID_DISCOF) REFERENCES DISCIPLINA_OFERTADAIMP (IDDISCOF)
	,CONSTRAINT CK_STAT_ATIVINCC CHECK (STATUS IN ('ABERTA','DISPONIBILIZADA','ENCERRADA','FECHADA','PRORROGADA'))
)
GO

CREATE INDEX [XXVII_TbAtivVincIdAtVinc] ON ATIVIDADE_VINCULADAIMP 
	(  
	ID_ATIVID_VINC ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE ENTREGAIMP(
	ID_ENTREGA INT NOT NULL IDENTITY (1,1)
	,ID_ALUNO INT NOT NULL
	,ID_ATIVID_VINC INT NOT NULL
	,TITULO VARCHAR(100) NOT NULL
	,RESPOSTA VARCHAR(MAX) NOT NULL
	,DATA_ENTREGA DATETIME2 NOT NULL
	,[STATUS] CHAR(20) NOT NULL
	,ID_PROFESSOR INT NOT NULL
	,NOTA NUMERIC (3) NULL
	,DATA_AVALIACAO DATETIME2 NULL
	,OBS VARCHAR(MAX) NULL
	,CONSTRAINT PK_ENT PRIMARY KEY (ID_ENTREGA)
	,CONSTRAINT FK_AL_ENT FOREIGN KEY (ID_ALUNO) REFERENCES ALUNOIMP (ID_ALUNO)
	,CONSTRAINT FK_ATIVINC_ENT FOREIGN KEY (ID_ATIVID_VINC) REFERENCES ATIVIDADE_VINCULADAIMP (ID_ATIVID_VINC)
	,CONSTRAINT FK_PROF_ENT FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSORIMP (ID_PROFESSOR)
	,CONSTRAINT CK_STAT_ENT CHECK (STATUS IN ('ENTREGUE','CORRIGDO'))
	,CONSTRAINT CK_NOTA_ENT CHECK (NOTA >= '0.00' AND NOTA <= '10.00')
)

GO
ALTER TABLE ENTREGAIMP ADD CONSTRAINT DF_DT_ENT DEFAULT (GETDATE()) FOR DATA_ENTREGA
GO

ALTER TABLE ENTREGAIMP ADD CONSTRAINT DF_STAT_ENT DEFAULT ('ENTREGUE') FOR [STATUS]
GO

CREATE INDEX [XXXI_TbEntrVincIdEnt] ON ENTREGAIMP  
	(  
	ID_ENTREGA ASC 
	) ON [PRIMARY] 
GO

CREATE TABLE MENSAGEMIMP (
	ID_MENSAGEM INT NOT NULL IDENTITY (1,1)
	,ID_ALUNO INT NOT NULL
	,ID_PROFESSOR INT NOT NULL
	,ASSUNTO VARCHAR(100) NOT NULL
	,REFERENCIA VARCHAR (100) NOT NULL
	,CONTEUDO VARCHAR(MAX)
	,[STATUS] CHAR(10) NOT NULL
	,DATA_ENVIO DATETIME2 NOT NULL
	,DATA_RESPOTA DATETIME2 NULL
	,RESPOSTA VARCHAR(MAX) NULL
	,CONSTRAINT PK_MENS PRIMARY KEY (ID_MENSAGEM)
	,CONSTRAINT FK_AL_MSG FOREIGN KEY (ID_ALUNO) REFERENCES ALUNOIMP (ID_ALUNO)
	,CONSTRAINT FK_PROF_MSG FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSORIMP (ID_PROFESSOR)
	,CONSTRAINT CK_STAT_ENTR CHECK (STATUS IN ('ENVIADO','LIDO','RESPONDIDO'))
)
GO

ALTER TABLE MENSAGEMIMP ADD CONSTRAINT DF_DTENV_MSG DEFAULT (GETDATE()) FOR DATA_ENVIO
GO

ALTER TABLE MENSAGEMIMP ADD CONSTRAINT DF_STAT_ENTR DEFAULT ('ENVIADO') FOR [STATUS]
GO

CREATE INDEX [XXXV_TbMensgVincIdEnt] ON MENSAGEMIMP  
	(  
	ID_MENSAGEM ASC 
	) ON [PRIMARY] 
GO

/*==============================================================================================
								INSERT DE DADOS NAS TABELAS
================================================================================================*/

INSERT INTO USUARIOIMP( [LOGIN], SENHA, DATA_EXPIRACAO)VALUES (784578,123,'2019-12-31 00:00:00'),
															 (784585,321,'2019-12-31 00:00:00'),
															(564875,648,'2019-12-31 00:00:00'),
															(347813,784,'2019-12-31 00:00:00'),
															(478451,647,'2019-12-31 00:00:00'),
															(974851,315,'2019-12-31 00:00:00'),
															(281574,285,'2019-12-31 00:00:00'),
															(648796,178,'2019-12-31 00:00:00')

INSERT INTO CURSOIMP(NOME_CURSO) 
VALUES ('BANCO DE DADOS'),('GESTAO DA INFORMACAO'),('REDE DE COMPUTADORES'),('ANALISE E DESENVOLVIMENTO DE SISTEMAS'),('SEGURANCA DA INFORMACAO'),('BUSINESS INTELLIGENCE'),('CIENCIA DA COMPUTACAO'),('ROBOTICA')


 INSERT INTO ALUNOIMP ( ID_USUARIO, NOME, EMAIL, ENDERECO, TELEFONE_RESIDENCIAL, TELEFONE_CELULAR, RA, FOTO)
 VALUES (1,'ALESSANDRO','AEMLIMA@GMAIL.COM','RUA GAVIAO, 786','11875848754','6546464646','1901100',NULL),
 (5,'YURI','YUR@GMAIL.COM','RUA ALGOZ, 424','11456424576','2476879894','1901164',NULL),
 (6,'INGRID','ING@GMAIL.COM','RUA GUILHERME, 877','11675687986','2467547869','1901298',NULL),
 (7,'REGIS','REG@GMAIL.COM','RUA MOLINA, 784','11567987987','5668756434','1901151',NULL),
  (8,'CAIO','CAI@GMAIL.COM','RUA GAVIAO, 786','114578545214','6576554476','1901278',NULL)


 INSERT INTO COORDENADORIMP ( ID_USUARIO, NOME, ENDERECO, E_MAIL, TELEFONE_RESIDENCIAL, TELEFONE_CELULAR)
 VALUES (2,'DIOMAR','DIOM@GMAIL.COM','RUA NESTOR, 274','11348789989','5654765876')

 INSERT INTO PROFESSORIMP ( ID_USUARIO, NOME, EMAIL, ENDERECO,TELEFONE_RESIDENCIAL, TELEFONE_CELULAR, APELIDO)
 VALUES (3,'TIAGO','TIAG@GMAIL.COM','RUA JACINTO, 975','11674535696','2345456578','ZE')

 INSERT INTO PROFESSORIMP ( ID_USUARIO, NOME, EMAIL, ENDERECO,TELEFONE_RESIDENCIAL, TELEFONE_CELULAR, APELIDO)
 VALUES (4,'ISAAC','ISAA@GMAIL.COM','RUA PONTES, 9742','11455878674','9438457678','DOM')

 INSERT INTO DISCIPLINAIMP ( NOME, [DATA_DISC], [STATUS], PLANODESTINO, CARGAHORARIA,COMPETENCIAS,HABILIDADES,EMENTA,CONTEUDOPROGRAMATICO,
 BIBLIOGRAFIA,PERCENTUALPRATICO,PERCENTUALTEORICO,ID_COORDENADOR )
 VALUES ('LOGICA PROGRAMACAO','2019-11-01 00:00:00','ABERTA','APRENDIZAGEM AZURE','40','BANCO DADOS','ADMINISTRAR','ADMINISTRAR DADOS','USAR PLATAFORMAS DE BANCO DE DADOS','MVA','100','00','1')


 INSERT INTO DISCIPLINAIMP(NOME ,[DATA_DISC] ,[STATUS] ,PLANODESTINO ,CARGAHORARIA ,COMPETENCIAS ,HABILIDADES ,EMENTA 	,CONTEUDOPROGRAMATICO ,BIBLIOGRAFIA ,PERCENTUALPRATICO ,PERCENTUALTEORICO ,ID_COORDENADOR )
VALUES('FUNDAMENTOS BANCO DE DADOS',GETDATE(),'ABERTA','TECNÓLOGO','40','ADMINISTRADOR','ADMINISTRAR BANCO DE DADOS','A VERIFICAR','EXTENSO','VARIOS LIVROS E AUTORES','100','00','1'),
('LOGICA PROGRAMACAO',GETDATE(),'ABERTA','TECNÓLOGO','80','DESENVOLVEDOR','ADMINISTRAR BANCO DE DADOS','A VERIFICAR', 'EXTENSO', 'VARIOS LIVROS E AUTORES','100','00','1'),
('LINGUAGEM PROGRAMACAO',GETDATE(),'ABERTA','TECNÓLOGO','80','CONSULTOR','ADMINISTRAR BANCO DE DADOS','A VERIFICAR', 'EXTENSO', 'VARIOS LIVROS E AUTORES','100','00','1'),
('DEVOPS',GETDATE(),'ABERTA','TECNÓLOGO','80','ESPECIALISTA','ADMINISTRAR BANCO DE DADOS','A VERIFICAR','EXTENSO','VARIOS LIVROS E AUTORES','100','00','1'),
('LINGUAGEM SQL',GETDATE(),'ABERTA','TECNÓLOGO','40','DESENVOLVEDOR','DESENVOLVEDOR BANCO DE DADOS','A VERIFICAR', 'EXTENSO', 'VARIOS LIVROS E AUTORES','100','00','1'),
('DESENVOLVIMENTO WEB',GETDATE(),'FECHADA','TECNÓLOGO','40','ADMINISTRADOR','ADMINISTRAR BANCO DE DADOS','A VERIFICAR', 'EXTENSO','VARIOS LIVROS E AUTORES','100','00','1'),
('NGENHARIA DE SOFTWARE',GETDATE(),'ABERTA','TECNÓLOGO','40','ADMINISTRADOR','ADMINISTRAR BANCO DE DADOS','A VERIFICAR', 'EXTENSO','VARIOS LIVROS E AUTORES','100','00','1'),
('ANALISE EXPLORATORIA DE DADOS',GETDATE(),'ABERTA','TECNÓLOGO','40','ADMINISTRADOR','ADMINISTRAR BANCO DE DADOS','A VERIFICAR', 'EXTENSO','VARIOS LIVROS E AUTORES','100','00','1')

INSERT INTO DISCIPLINA_OFERTADAIMP ( ID_COORDENADOR,DTINICIOMATRICULA,DTFIMMATRICULA,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA,ID_PROFESSOR,METODOLOGIA,RECURSOS,CRITERIO_AVALIACAO,PLANO_AULAS)
 VALUES ('1','2019-09-20 00:00:00.000','2019-10-20 00:00:00.000','1','6','2019','1','B','1','USO DE FERRMANETAS DE BI','PLATAFORMAS E DESKTOPS','ATIVIDADES CONTINUADAS E PROVA','ATIVIDADES EM SALA E MATÉRIA')

INSERT INTO SOLICITACAO_MATRICULAIMP ( ID_ALUNO,ID_DISCIPLINAOFERT,DATA_SOLICITACAO,ID_COORDENADOR)
 VALUES ('5','2',GETDATE(),'1')

INSERT INTO ATIVIDADEIMP ( TITULO,CONTEUDO,DESCRICAO,TIPO,ID_PROFESSOR)
 VALUES ('MONTANDO ALGORITMOS','ELABORACAO DE ALGORITMOS','MUITA COISA','TESTE','2')

INSERT INTO ATIVIDADE_VINCULADAIMP (ID_ATIVIDADE	,ID_PROFESSOR	,ID_DISCOF	,ROTULO	,[STATUS]	,INICIO_ATIVIDADE	,FIM_ATIVIDADE)
 VALUES ('1','1','2','AC1','DISPONIBILIZADA','2019-09-20 19:00:00','2019-09-20 22:00:00')

 INSERT INTO ENTREGAIMP (ID_ALUNO,ID_ATIVID_VINC,TITULO,RESPOSTA,DATA_ENTREGA,[STATUS],ID_PROFESSOR,NOTA,DATA_AVALIACAO,OBS)
 VALUES ('3','3','2','calculos','2019-09-20 19:00:00','ENTREGUE','1','6.00',GETDATE(),'varias respostas dissertativas')

INSERT INTO MENSAGEMIMP (ID_ALUNO,ID_PROFESSOR,ASSUNTO,REFERENCIA,CONTEUDO,[STATUS],DATA_ENVIO,DATA_RESPOTA,RESPOSTA)
 VALUES ('3','1','algoritmos','calculos','testes de algoritmos','ENVIADO',GETDATE(),null,'varias respostas dissertativas')

 /*==============================================================================================
						SELECTS NAS TABELAS (CONSULTA DOS DADOS INSERIDOS)
================================================================================================*/
SELECT * FROM USUARIOIMP
SELECT * FROM ALUNOIMP
SELECT * FROM COORDENADORIMP
SELECT * FROM PROFESSORIMP
SELECT * FROM CURSOIMP
SELECT * FROM DISCIPLINAIMP
SELECT * FROM DISCIPLINA_OFERTADAIMP
SELECT * FROM SOLICITACAO_MATRICULAIMP
SELECT * FROM ATIVIDADEIMP
SELECT * FROM ATIVIDADE_VINCULADAIMP
SELECT * FROM ENTREGAIMP
SELECT * FROM MENSAGEMIMP